adversary_id: custom_adversary_profile__APT_3__APT3_Phase2_Pattern_3__2023-10-19-22_36_11
name: Custom Adversary Profile
description: [['stockpile__discovery', 'atomic__discovery'], ['stockpile__lateral-movement', 'atomic__lateral-movement'], ['stockpile__execution', 'atomic__execution']]
atomic_ordering:
- 3fc35f10c72ccb131d55242e66ea1d0b # ('3fc35f10c72ccb131d55242e66ea1d0b', 'None', 'validate_me') ; {'description': "This test emulates MAZE ransomware's ability to enumerate directories using Powershell. \nUpon successful execution, this test will output the directory enumeration results to a specified file, as well as display them in the active window. \nSee https://www.mandiant.com/resources/tactics-techniques-procedures-associated-with-maze-ransomware-incidents\n", 'tactic': 'discovery', 'technique': {'attack_id': 'T1083', 'name': 'File and Directory Discovery'}, 'platforms': {'windows': {'psh': {'cleanup': 'remove-item $env:temp\\T1083Test5.txt -ErrorAction SilentlyContinue', 'command': '$folderarray = @("Desktop", "Downloads", "Documents", "AppData/Local", "AppData/Roaming"); Get-ChildItem -Path $env:homedrive -ErrorAction SilentlyContinue | Out-File -append $env:temp\\T1083Test5.txt; Get-ChildItem -Path $env:programfiles -erroraction silentlycontinue | Out-File -append $env:temp\\T1083Test5.txt; Get-ChildItem -Path "${env:ProgramFiles(x86)}" -erroraction silentlycontinue | Out-File -append $env:temp\\T1083Test5.txt; $UsersFolder = "$env:homedrive\\Users\\"; foreach ($directory in Get-ChildItem -Path $UsersFolder -ErrorAction SilentlyContinue) ; {; foreach ($secondarydirectory in $folderarray);  {Get-ChildItem -Path "$UsersFolder/$directory/$secondarydirectory" -ErrorAction SilentlyContinue | Out-File -append $env:temp\\T1083Test5.txt}; }; cat $env:temp\\T1083Test5.txt', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['3fc35f10c72ccb131d55242e66ea1d0b', 'None', 'validate_me'], 'plugin': 'atomic'}
- 6b96fa3cbc72bc6771572a924a31b15d # ('6b96fa3cbc72bc6771572a924a31b15d', 'None', 'validate_me') ; {'description': 'Map Admin share utilizing PowerShell\n', 'tactic': 'lateral-movement', 'technique': {'attack_id': 'T1021.002', 'name': 'Remote Services: SMB/Windows Admin Shares'}, 'platforms': {'windows': {'psh': {'cleanup': '', 'command': 'New-PSDrive -name g -psprovider filesystem -root \\\\Target\\C$', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['6b96fa3cbc72bc6771572a924a31b15d', 'None', 'validate_me'], 'plugin': 'atomic'}
- 9cbe6aa572eed558bf7825df0726c1cb # ('9cbe6aa572eed558bf7825df0726c1cb', 'None', 'validate_me') ; {'description': 'Executes powershell.exe with variations of the -Command parameter with encoded arguments supplied', 'tactic': 'execution', 'technique': {'attack_id': 'T1059.001', 'name': 'Command and Scripting Interpreter: PowerShell'}, 'platforms': {'windows': {'psh': {'cleanup': '', 'command': '$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable; if (-not $RequiredModule) {Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force};  ;  Out-ATHPowerShellCommandLineParameter -CommandLineSwitchType Hyphen -CommandParamVariation C -UseEncodedArguments -EncodedArgumentsParamVariation EA -Execute -ErrorAction Stop', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['9cbe6aa572eed558bf7825df0726c1cb', 'None', 'validate_me'], 'plugin': 'atomic'}
objective: 495a9828-cab1-44dd-a0ca-66e58177d8cc
tags: []