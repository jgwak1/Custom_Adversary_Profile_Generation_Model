adversary_id: custom_adversary_profile__APT_3__APT3_Phase2_Pattern_3__2023-10-19-22_36_17
name: Custom Adversary Profile
description: [['stockpile__discovery', 'atomic__discovery'], ['stockpile__lateral-movement', 'atomic__lateral-movement'], ['stockpile__execution', 'atomic__execution']]
atomic_ordering:
- a44bb43474728496276d5d73aa14588f # ('a44bb43474728496276d5d73aa14588f', 'None', 'None') ; {'description': 'Identify remote systems via arp. \n\nUpon successful execution, cmd.exe will execute arp to list out the arp cache. Output will be via stdout.\n', 'tactic': 'discovery', 'technique': {'attack_id': 'T1018', 'name': 'Remote System Discovery'}, 'platforms': {'windows': {'cmd': {'cleanup': '', 'command': 'arp -a', 'payloads': []}}}, 'id__dependence__fact': ['a44bb43474728496276d5d73aa14588f', 'None', 'None'], 'plugin': 'atomic'}
- 716745153b22c35bf39d177e28ce7bf6 # ('716745153b22c35bf39d177e28ce7bf6', 'None', 'None') ; {'description': 'Copies a file to a remote host and executes it using PsExec. Requires the download of PsExec from [https://docs.microsoft.com/en-us/sysinternals/downloads/psexec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec).\n', 'tactic': 'lateral-movement', 'technique': {'attack_id': 'T1021.002', 'name': 'Remote Services: SMB/Windows Admin Shares'}, 'platforms': {'windows': {'cmd': {'cleanup': '', 'command': 'C:\\PSTools\\PsExec.exe \\\\localhost -accepteula -c C:\\Windows\\System32\\cmd.exe', 'payloads': []}}}, 'id__dependence__fact': ['716745153b22c35bf39d177e28ce7bf6', 'None', 'None'], 'plugin': 'atomic'}
- 843bfc63b18f78a56df80c4b42e876f2 # ('843bfc63b18f78a56df80c4b42e876f2', 'None', 'validate_me') ; {'description': 'Creates a file with an alternate data stream and simulates executing that hidden code/file. Upon execution, "Stream Data Executed" will be displayed.\n', 'tactic': 'execution', 'technique': {'attack_id': 'T1059.001', 'name': 'Command and Scripting Interpreter: PowerShell'}, 'platforms': {'windows': {'psh': {'cleanup': 'Remove-Item $env:TEMP\\NTFS_ADS.txt -Force -ErrorAction Ignore', 'command': 'if((Get-Volume -DriveLetter $env:HOMEDRIVE[0]) { ; } else {Write-Host Prereq\'s for this test cannot be met automatically};  ;  Add-Content -Path $env:TEMP\\NTFS_ADS.txt -Value \'Write-Host "Stream Data Executed"\' -Stream \'streamCommand\'; $streamcommand = Get-Content -Path $env:TEMP\\NTFS_ADS.txt -Stream \'streamcommand\'; Invoke-Expression $streamcommand', 'parsers': {'plugins.atomic.app.parsers.atomic_powershell': [{'source': 'validate_me'}]}, 'payloads': []}}}, 'id__dependence__fact': ['843bfc63b18f78a56df80c4b42e876f2', 'None', 'validate_me'], 'plugin': 'atomic'}
objective: 495a9828-cab1-44dd-a0ca-66e58177d8cc
tags: []